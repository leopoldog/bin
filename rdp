#!/bin/bash

. $(dirname "$0")/library.sh

PROGRAM_NAME=$(basename "$0")
CONF_DIR=~/".rdesktop"
LOCK_FILE="${CONF_DIR}/.lock"
MENU_DIR_CONFIG=~/".config/menus/applications-merged"
MENU_DIR_LOCAL=~/".local/share/applications"
DESKTOP_DIR=~/".local/share/desktop-directories"
ICONS_DIR=~/".local/share/icons"
SECURE_DIR=~/"secure"
MENU_FILENAME="remote-access.menu"
DIR_FILENAME="remote-access.directory"
ERROR_FILE_PREFIX="error"
ERROR_FILE="${CONF_DIR}/${ERROR_FILE_PREFIX}-$(date --iso-8601).log"

if [ -z "$GIO_LAUNCHED_DESKTOP_FILE_PID" ]
then
  INTERACTIVE=1
else
  INTERACTIVE=0
fi

if ! checkDependencies $PROGRAM_NAME ssh sshpass ssh-copy-id xmlstarlet nmap arp xfreerdp zenity flock vncviewer terminal:mate-terminal,gnome-terminal xrandr xwininfo notify-send crudini nmblookup ip base64
then
  exit -1
fi

# Creates the lock file
: >> "${LOCK_FILE}"

function help()
{
  if [ ! -z "$1" ]
  then
    MSG="
$PROGRAM_NAME: $1
"
  fi

  MSG="$MSG
Usage:
  $PROGRAM_NAME [ -h0wluf ] [ -s <screen> ] [ -p <position> ] <alias> [ <username> ]
  $PROGRAM_NAME [ -h0wluf ] [ -s <screen> ] [ -p <position> ] -a <menu>

Open an rdp session to the specified host

Options:
  -0              Open a console session

  -s <screen>     Open on the specified screen

  -l [<menu>]     Lists the available screens (for use with s option) and environments (for use with a option)
                  If a menu name is specified it lists all the machines in that menu item.

  -w              Open a wide screen spawning on both displays (if applicable)

  -p <position>   Use the specified position as left side of the window

  -h              Print this help

  -u              Regenerate the list in the .local directory (this option only regenerates the files then stops execution)

  -a <menu>       Open all machines specified in the given menu name

  -f              Full screen (ignore menu bars height)

The directory ${CONF_DIR} contains the definitions of machines in the form:
LGHI REVISE THIS
<menu> <alias> <type> <username> <password or - > <domain or - > <hostname or IP address> <MAC address>

type is RDP, VNC or SSH depending on protocol to use (in this case username, password and domain must be set to "-".
Specify the MAC address allow searching the machine on local network even if the address has changed.
You must use IP addresses and not machines names to allow MAC scan work in all cases.
"

  echo "$MSG" >&2
  [ "$INTERACTIVE" -eq 0 ] && $ZENITY --info --title "$PROGRAM_NAME" --text "$MSG"

  if [ ! -z "$1" ]
  then
    exit 1
  else
    exit 0
  fi
}

function createIcon() {
  local ICON_FILE="${ICONS_DIR}/rdp.png"

  if [ ! -f "${ICON_FILE}" ]
  then
    mkdir -p "${ICONS_DIR}"
    grep -A 999999 "^#### BASE64 ####" "$0" | tail -n +2 | ${BASE64} -d > "${ICON_FILE}"
    chmod 444 "${ICON_FILE}"
  fi
}

function regenerate()
{
  echo "Create access description for : "

  (
    $FLOCK $fd
    local TEMP_FILE="$(mktemp -u)"

    createIcon

    mkdir -p "${MENU_DIR_CONFIG}" "${MENU_DIR_LOCAL}" "${DESKTOP_DIR}" "${SECURE_DIR}" "${CONF_DIR}"
    chmod 700 "${CONF_DIR}"

    OLD_LIST=$(grep -wrl "Exec=$RDP" "${MENU_DIR_LOCAL}/${PROGRAM_NAME}@"*.desktop 2>/dev/null)

    local MENUS=$(ls -1 ${CONF_DIR}/*.conf | while read f; do echo "$(basename "$f" .conf)"; done | sort -u)

    cat > "${TEMP_FILE}" 2>/dev/null <<!
<!DOCTYPE Menu
  PUBLIC '-//freedesktop//DTD Menu 1.0//EN'
  'http://standards.freedesktop.org/menu-spec/menu-1.0.dtd'>
<Menu>
  <Name>Merged</Name>
  <Menu>
    <Name>RemoteAccess</Name>
    <Directory>remote-access.directory</Directory>
    <DirectoryDir>${HOME}/.local/share/desktop-directories</DirectoryDir>
    <AppDir>${HOME}/.local/share/applications</AppDir>
    <DefaultLayout inline="false"/>
$(echo "$MENUS" | sed "s;\(.*\);    <Menu>\n        <Name>\1</Name>\n        <Directory>\1.directory</Directory>\n        <DirectoryDir>${HOME}/.local/share/desktop-directories</DirectoryDir>\n        <AppDir>${HOME}/.local/share/applications</AppDir>\n        <!--Entry:\1-->\n        <Layout>\n            <Merge type=\"menus\"/>\n            <!--Layout:\1-->\n            <Merge type=\"files\"/>\n        </Layout>\n    </Menu>;g")
    <Layout>
        <Merge type="menus"/>
$(echo "$MENUS" | sed "s;\(.*\);        <Menuname>\1</Menuname>;g")
        <Merge type="files"/>
    </Layout>
  </Menu>
</Menu>
!

    cat > "${DESKTOP_DIR}/${DIR_FILENAME}" <<!
[Desktop Entry]
Comment=Remote Access
Comment[it_CH]=Accesso Remoto
Comment[fr_CH]=Accés Distant
Encoding=UTF-8
Icon=application-x-remote-connection
Icon[it_CH]=application-x-remote-connection
Icon[fr_CH]=application-x-remote-connection
Name=Remote Access
Name[it_CH]=Accesso Remoto
Name[fr_CH]=Accés Distant
Type=Directory
Version=1.0
NoDisplay=false
!

    for MENU in $MENUS
      do
        FILENAME="${DESKTOP_DIR}/${MENU}.directory"

        if [ ! -z "${MENU}" -a ! -f "${FILENAME}" ]
        then
          cat > "${FILENAME}" <<!
[Desktop Entry]
Encoding=UTF-8
Icon=folder
Icon[it_CH]=folder
Icon[fr_CH]=folder
Type=Directory
Version=1.0
Name[it_CH]=${MENU}
Name[fr_CH]=${MENU}
Name=${MENU}
Comment[it_CH]=${MENU}
Comment[fr_CH]=${MENU}
Comment=${MENU}
!
        fi
      done

    LIST=$(for MENU in $MENUS
           do
             $CRUDINI --get "${CONF_DIR}/${MENU}.conf" \
             | sort -u \
             | while read ALIAS
               do
                 PROTOCOL="$($CRUDINI --get "${CONF_DIR}/${MENU}.conf" "$ALIAS" protocol 2>/dev/null)"
                 WIDE="$($CRUDINI --get "${CONF_DIR}/${MENU}.conf" "$ALIAS" wide 2>/dev/null)"

                 if [ ! -z "$ALIAS" ]
                 then
                   if [ "$PROTOCOL" == "RDP" ]
                   then
                     ICON="rdp"
                   elif [ "$PROTOCOL" == "VNC" ]
                   then
                     ICON="application-x-vnc"
                   elif [ "$PROTOCOL" == "SSH" ]
                   then
                     ICON="utilities-terminal"
                   fi

                   NAME[0]="${ALIAS}"
                   OPT[0]="${ALIAS}"

                   if [ "$WIDE" == "true" ]
                   then
                     NAME[1]="${ALIAS}(wide)"
                     OPT[1]="-w ${ALIAS}"
                   else
                     NAME[1]=""
                     OPT[1]=""
                   fi

                   for i in 0 1
                   do
                     if [ -z "${NAME[i]}" ]
                     then
                       break
                     fi

                     FILENAME="${MENU_DIR_LOCAL}/${PROGRAM_NAME}@${MENU}#${NAME[i]}.desktop"
                     echo "${FILENAME}"
                     sed -i "s;\(        <!--Entry:${MENU}-->\);        <Include><Filename>$(basename ${FILENAME})</Filename></Include>\n\1;g;
                             s;\(            <!--Layout:${MENU}-->\);            <Filename>$(basename ${FILENAME})</Filename>\n\1;g;" \
                            "${TEMP_FILE}" >&2
                     cat > "${FILENAME}" <<!
[Desktop Entry]
Categories=RemoteAccess;
Comment=
Exec=$RDP ${OPT[i]}
GenericName=
Hidden=false
Icon=${ICON}
Name=${NAME[i]}
NoDisplay=false
Path=
StartupNotify=true
Terminal=0
TerminalOptions=
Type=Application
X-KDE-SubstituteUID=false
X-KDE-Username=
!
                   done
                 fi
               done

             FILENAME="${MENU_DIR_LOCAL}/${PROGRAM_NAME}@${MENU}#ALL.desktop"
             echo "${FILENAME}"
             sed -i "s;\(        <!--Entry:${MENU}-->\);        <Include><Filename>$(basename ${FILENAME})</Filename></Include>\n\1;g;
                     s;\(            <!--Layout:${MENU}-->\);            <Filename>$(basename ${FILENAME})</Filename>\n\1;g;" \
                    "${TEMP_FILE}" >&2
             cat > "${FILENAME}" <<!
[Desktop Entry]
Categories=RemoteAccess;
Comment=
Exec=$RDP -a ${MENU}
GenericName=
Hidden=false
Icon=dialog-question
Name=Open all
NoDisplay=false
Path=
StartupNotify=true
Terminal=0
TerminalOptions=
Type=Application
X-KDE-SubstituteUID=false
X-KDE-Username=
!
           done)

    echo "$LIST
$OLD_LIST
$OLD_LIST" \
    | sort \
    | uniq -c \
    | while read op file
      do
        if [ "$f" != "$file" ]
        then
          case "$op" in
            1) echo "Created  $(basename $file)"
               ;;
            2) echo "Deleted  $(basename $file)"
               rm -f "$file"
               ;;
            3) echo "Replaced $(basename $file)"
               ;;
            *) echo "$file (INTERNAL ERROR)"
               ;;
          esac
        fi

        f="$file"
      done \
    | sort -k2

    $XMLSTARLET fo "${TEMP_FILE}" > "${MENU_DIR_CONFIG}/${MENU_FILENAME}"

    rm -f "$TEMP_FILE"
  ) {fd}<"${LOCK_FILE}"
}

function checkMac()
{
  local MAC="$(echo "${1}" | sed "s/ //g;s/,/\\\\|/g")"
  local LOCALNET=$2

  local MACSMB="${MAC//:/-}"
  local STATUS="$(${NMBLOOKUP} -R -S -A $ADDRESS)"

  found=1

  echo "$STATUS" | grep -iq "MAC Address = \(${MACSMB}\)"
  if [ $? -eq 1 ]
  then
    if [ "$PROTOCOL" != "RDP" ]
    then
      if [ -z "${OUSERNAME}" ]
      then
        CN=${ADDRESS}
      else
        CN=${USERNAME}@${ADDRESS}
      fi

      local GETMAC=$(getMacViaSSH "${CN}" "${IP_ADDRESS}" "${OPASSWORD}")

      echo "$GETMAC" | grep -q "\($MAC\)"

      if [ "$?" -ne 0 ]
      then
        found=0
      fi
    else
      found=0
    fi
  fi

  if [ $found -eq 0 ]
  then
    IP_ADDRESS="$(echo "$STATUS" | sed -n "s/Looking up status of //p" | head -1)"

    if [ "$LOCALNET" -eq 0 ]
    then
      SCAN=( $($IP addr | sed -n "s/ *inet \([0-9./]*\) .*/\1/p" | grep -v "127\.0\.0\.1" | sort -u) )
    else
      SCAN=( $(echo $IP_ADDRESS | sed "s/\.[^.]*$/.*/g") )
    fi

    NMAPLIST=$($NMAP -n -sP "${SCAN[@]}" | sed -n "s/Nmap scan report for \([0-9]\+\.[0-9]\+\.[0-9]\+\.[0-9]\+\)/\1/p")
    NEW_ADDR=$($ARP -n | grep -i "${MAC}" | sed -n "s/^\([^ ]*\) .*/\1/p")

    if [ -z "$NEW_ADDR" ]
    then
      if [ "$PROTOCOL" == "RDP" ]
      then
        NEW_ADDR=$($NMAP -n -p 3389 --open "${SCAN[@]}" \
                   | tr "\n" " " \
                   | sed "s/\(Nmap scan report for \|Interesting ports on \|The 1 scanned port on \)/\n/g" \
                   | sed -n "s/^\([0-9.]\+\).*\(open\|closed\|filtered\).*/\1 \2/p" \
                   | while read ip_addr opened
                     do
                       if [ "$opened" == "open" ] && ${NMBLOOKUP} -R -S -A $ip_addr | grep -iq "MAC Address = \(${MACSMB}\)"
                       then
                         echo $ip_addr
                         break
                       fi
                     done)
      else
        NEW_ADDR=$($NMAP -n -p 22 --open "${SCAN[@]}" \
                   | tr "\n" " " \
                   | sed "s/\(Nmap scan report for \|Interesting ports on \|The 1 scanned port on \)/\n/g" \
                   | sed -n "s/^\([0-9.]\+\).*\(open\|closed\|filtered\).*/\1 \2/p" \
                   | while read ip_addr opened
                     do
                       if [ "$opened" == "open" ]
                       then
                         if [ -z "${OUSERNAME}" ]
                         then
                           CN=${ip_addr}
                         else
                           CN=${USERNAME}@${ip_addr}
                         fi

                         if checkMacViaSSH "${CN}" "${MAC}" "${OPASSWORD}"
                         then
                           echo $ip_addr
                           break
                         fi
                       elif [ "$PROTOCOL" != "SSH" ] && ${NMBLOOKUP} -R -S -A $ip_addr | grep -iq "MAC Address = \(${MACSMB}\)"
                       then
                         echo $ip_addr
                         break
                       fi
                     done)
      fi
    fi

    if [ ! -z "$NEW_ADDR" -a "$IP_ADDRESS" != "$NEW_ADDR" ]
    then
      n=$(echo "$NEW_ADDR" | wc -l)
      if [ $n -gt 1 ]
      then
        MSG="Unable to find mac address for '$ALIAS', found $n correspondences.
Please specify it manually!"
        echo -e "\n${RED}$MSG${WHITE}\n" >&2
        [ "$INTERACTIVE" -eq 0 ] && $NOTIFYSEND --urgency=low --icon=error --app-name=$PROGRAM_NAME "$MSG"
        NEW_ADDR=$ADDRESS
      else
        (
          $FLOCK $fd
          echo "Update configuration file ${CONF_DIR}/${MENU}.conf" >&2
          $CRUDINI --set "${CONF_DIR}/${MENU}.conf" "$ALIAS" address "$NEW_ADDR"
          $CRUDINI --set "${CONF_DIR}/${MENU}.conf" "$ALIAS" mac "$MAC"
        ) {fd}<"${LOCK_FILE}"
      fi
    fi

    ADDRESS=$NEW_ADDR
  fi

  if [ -z "$ADDRESS" ]
  then
    MSG="'$ALIAS' not found"
    echo "$MSG" >&2
    [ "$INTERACTIVE" -eq 0 ] && $NOTIFYSEND --urgency=low --icon=error --app-name=$PROGRAM_NAME "$MSG"
    return 2
  else
    echo "Found $ALIAS => $ADDRESS" >&2
  fi

  return 0
}

function getMac()
{
  local MAC=$(${NMBLOOKUP} -R -S -A $ADDRESS \
              | sed -n "s/^[[:space:]]*MAC Address =[[:space:]]*\([^[:space:]]*\).*/\1/p" \
              | tr "[:upper:]-" "[:lower:]:")

  if [ -z "$MAC" -o "$MAC" == "00:00:00:00:00:00" ]
  then
    MAC=$($ARP -n -a "${IP_ADDRESS}" \
          | sed -n "s;.*($IP_ADDRESS) at \([^ ]*\) \[ether\].*;\1;p")

    if [ -z "$MAC" ]
    then
      if [ -z "${OUSERNAME}" ]
      then
        CN=${ADDRESS}
      else
        CN=${USERNAME}@${ADDRESS}
      fi

      MAC=$(getMacViaSSH "${CN}" "${IP_ADDRESS}" "${OPASSWORD}")
    fi
  fi

  if [ -z "$MAC" ]
  then
    echo "Unable to find MAC address" >&2
  else
    echo "Found MAC address '${MAC}'" >&2
    (
      $FLOCK $fd
      echo "Update configuration file ${CONF_DIR}/${MENU}.conf" >&2
      $CRUDINI --set "${CONF_DIR}/${MENU}.conf" "$ALIAS" address "$ADDRESS"
      $CRUDINI --set "${CONF_DIR}/${MENU}.conf" "$ALIAS" mac "$MAC"
    ) {fd}<"${LOCK_FILE}"
  fi

  echo "$MAC"

  return 0
}

function startViewer()
{
  local nocache=$1
  local screensize="$2"

  if [ -z "$screensize" ]
  then
    screensize="${SIZE}"
  fi

  ping -q -c 1 "$ADDRESS" > /dev/null

  if [ $? -eq 0 -a ! -z "$ADDRESS" ]
  then
    echo "${PROTOCOL} ${ALIAS}: $(date +"%Y-%m-%d %H:%M:%S") New session started" >> ${ERROR_FILE}
    case ${PROTOCOL} in
      RDP)
        if [ $nocache -eq 0 ]
        then
          CACHE=
        else
          CACHE=-P
        fi
        #$RDESKTOP -T${ALIAS} ${OUSERNAME} ${OPASSWORD} ${ODOMAIN} -g${screensize} -a16 -rsound -kfr-ch ${ADDRESS} -D -z $CACHE -N -xl -r "disk:${USER}=${HOME}" -r "clipboard:PRIMARYCLIPBOARD" ${CONSOLE} 2>&1 | sed "s/^.*/${PROTOCOL} ${ALIAS}: &/" >> "${ERROR_FILE}" &
        $XFREERDP /t:${ALIAS} ${OUSERNAME/-u/\/u:} ${OPASSWORD/-p/\/p:} ${ODOMAIN/-d/\/d:} /size:${screensize} /cert-tofu /bpp:16 /kbd:0x0000100C /v:${ADDRESS} -decorations +home-drive +clipboard /sound:sys:pulse /multimedia:sys:pulse ${CONSOLE} 2>&1 | sed "s/^.*/${PROTOCOL} ${ALIAS}: &/" >> "${ERROR_FILE}" &
        ;;

      VNC)
        $VNCVIEWER -name "${ALIAS}" -geometry ${screensize} ${ADDRESS} 2>&1 | sed "s/^.*/${PROTOCOL} ${ALIAS}: &/" >> "${ERROR_FILE}" &
        ;;

      SSH)
        if [ -z "${OUSERNAME}" ]
        then
          CN=${ADDRESS}
        else
          CN=${USERNAME}@${ADDRESS}
        fi

        if [ -z "$OPASSWORD" ]
        then
          $TERMINAL --name "${ALIAS}" --tab --command "$SSH -o StrictHostKeyChecking=no \"$CN\"" &
        else
          $SSHPASS $OPASSWORD $SSHCOPYID -o StrictHostKeyChecking=no "$CN" 2>/dev/null
          $TERMINAL --name "${ALIAS}" --tab --command "$SSHPASS $OPASSWORD $SSH -o StrictHostKeyChecking=no \"$CN\"" &
        fi
        ;;
    esac
  else
    MSG="Unable to open connection to machine '$ALIAS' because '$ADDRESS' is not responding."
    echo "$MSG" >&2
    [ "$INTERACTIVE" -eq 0 ] && $NOTIFYSEND --urgency=low --icon=error --app-name=$PROGRAM_NAME "$MSG"
    return 1
  fi

  return 0
}

function list()
{
  local MENU="$1"

  if [ -z "$MENU" ]
  then
    echo "Available displays:"
    $XRANDR -q | grep -w connected | sed -n "s/^\([^[:space:]]*\)[[:space:]]*connected[[:space:]]*\(primary\)\?[[:space:]]*\([0-9]*x[0-9]*+[0-9]*+[0-9]*\).*/\t\1\t-->\t\3\t\2/p"
    echo
    echo "Available environments:"
    ls -1 ${CONF_DIR}/*.conf | while read f; do echo "$(basename "$f" .conf)"; done | sort -u
  else
    CONF="${CONF_DIR}/${MENU}.conf"
    if [ -f "${CONF}" ]
    then
      echo "Available machines for \"$MENU\" environment:"
      $CRUDINI --get "${CONF}"
    else
      echo "Environment \"$MENU\" not found!"
    fi
  fi
}

function startConnection()
{
  local MENU="$1"
  local ALIAS="$2"
  local PROTOCOL="$3"
  local USERNAME="$4"
  local PASSWORD="$5"
  local DOMAIN="$6"
  local ADDRESS="$7"
  local MAC="$8"
  local AUTOPASS="$9"
  local LOCALNET="${10}"
  local NOCACHE="${11}"
  local SCREENSIZE="${12}"

  if [ -z "$USERNAME" ]
  then
    if [ "$PROTOCOL" == "RDP" ]
    then
      OUSERNAME="-u$($ZENITY --entry --title "$ALIAS" --text "Username")"
    else
      OUSERNAME=""
    fi
  else
    OUSERNAME="-u$USERNAME"
  fi

  if [ "$AUTOPASS" == "true" ]
  then
    OPASSWORD="-p$(sed -n "s/password=\(.*\)/\1/p" ${SECURE_DIR}/${PROGRAM_NAME}.conf)"
  elif [ -z "$PASSWORD" ]
  then
    if [ "$PROTOCOL" == "RDP" ]
    then
      OPASSWORD="-p$($ZENITY --entry --hide-text --title "$ALIAS" --text "Password for user ${OUSERNAME:2}")"
    else
      OPASSWORD=""
    fi
  else
    OPASSWORD="-p$PASSWORD"
  fi

  if [ -z "$DOMAIN" ]
  then
    ODOMAIN=""
  else
    ODOMAIN="-d$DOMAIN"
  fi

  IP_ADDRESS=$(ping -q -c 1 "$ADDRESS" \
               | head -1 \
               | sed "s/[^(]*(\([0-9.]\+\)).*/\1/g")

  if [ ! -z "$MAC" ]
  then
    [ "$LOCALNET" == "true" ]
    checkMac "$MAC" $?
  else
    MAC=$(getMac)
  fi

  if [ ! -z "$ADDRESS" ]
  then
    [ "$NOCACHE" == "true" ]
    startViewer $? "${SCREENSIZE}"
  fi

  return 0
}

function getMachines()
{
  local MENUS="$1"
  local ALIAS="${2:-.*}"
  local USERNAME="${3}"

  for m in $MENUS
  do
    for a in $($CRUDINI --get "${CONF_DIR}/${m}.conf" 2>/dev/null \
               | grep -iw "$ALIAS")
    do
      if [ ! -z "$USERNAME" ]
      then
        $CRUDINI --get "${CONF_DIR}/${m}.conf" "${a}" username 2>/dev/null \
        | grep -wq "$USERNAME"
        if [ $? -eq 0 ]
        then
          echo "$m $a"
        fi
      else
        echo "$m $a"
      fi
    done
  done

  return 0
}

if [ -z "$DISPLAY" ]
then
  echo >&2
  echo "Can't open display" >&2
  echo >&2
  exit 3
fi

unset SIZE
unset CONSOLE

ALIAS=""
USERNAME=""
MENUALIAS=""
ALLMENU=0
unset full
unset display
unset wide
unset position

while getopts "h0wulfs:p:a" opt
do
  case $opt in
    u) regenerate
       exit 0
       ;;

    l) list "${@:$OPTIND}"
       exit 0
       ;;

    p) position="-p $(echo "$OPTARG" | sed -n "s/^\([0-9]*\)$/\1/p")" ;;

    f) full="-f" ;;
    w) wide="-w" ;;
    0) CONSOLE="/admin" ;;
    a) ALLMENU=1 ;;
    s) display="-d $OPTARG" ;;

    h) help ;;
    \?) help "Unknown option" ;;
  esac
done

shift $((OPTIND-1))

if [ $ALLMENU -eq 0 ]
then
  ALIAS="$1"
  USERNAME="$2"

  if [ -z "${ALIAS}" ]
  then
    help "Missing machine alias"
  fi
else
  MENUALIAS="$1"

  if [ -z "${MENUALIAS}" ]
  then
    help "Missing menu name"
  fi
fi

SIZE=$(getGeometry $full $wide $display $position)
if echo "$SIZE" | grep -iq error
then
  help "$SIZE"
fi

ACCESS="$(stat -c %a "${CONF_DIR}")"

if [ "${ACCESS:1}" -ne "00" ]
then
  MSG="The access right on ${CONF_DIR} are too permissive."
  echo "$MSG" >&2
  [ "$INTERACTIVE" -eq 0 ] && $NOTIFYSEND --urgency=low --icon=error --app-name=$PROGRAM_NAME "$MSG"
  exit 4
fi

if [ -z "$MENUALIAS" ]
then
  MENUS=$(ls -1 ${CONF_DIR}/*.conf | while read f; do echo "$(basename "$f" .conf)"; done | sort -u)
else
  MENUS="$MENUALIAS"
fi

LIST=$(getMachines "$MENUS" "$ALIAS" "$USERNAME")

if [ -z "${LIST}" ]
then
  help "No machine found corresponding criteria"
fi

NUM_FOUND=$(echo "${LIST}" | wc -l)
echo
echo "Screen position: $SIZE"
echo
echo -n "Found $NUM_FOUND matching machine"
if [ $NUM_FOUND -ne 1 ]
then
  echo "(s):"
else
  echo ":"
fi
echo "$LIST" | while read MENU ALIAS; do echo "$ALIAS"; done
echo

# remove old cache stale files (if present)
\rm -f $(fuser -a -u ~/.rdesktop/cache/pstcache* 2>&1 | \grep -v "(${USER})$" | \sed "s/:$//g")

echo "$LIST" \
| while read MENU ALIAS
do
  PROTOCOL="$($CRUDINI --get "${CONF_DIR}/${MENU}.conf" "$ALIAS" protocol 2>/dev/null)"
  USERNAME="$($CRUDINI --get "${CONF_DIR}/${MENU}.conf" "$ALIAS" username 2>/dev/null)"
  PASSWORD="$($CRUDINI --get "${CONF_DIR}/${MENU}.conf" "$ALIAS" password 2>/dev/null)"
  DOMAIN="$($CRUDINI --get "${CONF_DIR}/${MENU}.conf" "$ALIAS" domain 2>/dev/null)"
  ADDRESS="$($CRUDINI --get "${CONF_DIR}/${MENU}.conf" "$ALIAS" address 2>/dev/null)"
  MAC="$($CRUDINI --get "${CONF_DIR}/${MENU}.conf" "$ALIAS" mac 2>/dev/null)"
  AUTOPASS="$($CRUDINI --get "${CONF_DIR}/${MENU}.conf" "$ALIAS" autopass 2>/dev/null)"
  LOCALNET="$($CRUDINI --get "${CONF_DIR}/${MENU}.conf" "$ALIAS" localnet 2>/dev/null)"
  NOCACHE="$($CRUDINI --get "${CONF_DIR}/${MENU}.conf" "$ALIAS" nocache 2>/dev/null)"
  SCREENSIZE="$($CRUDINI --get "${CONF_DIR}/${MENU}.conf" "$ALIAS" screensize 2>/dev/null)"

  (
    startConnection "${MENU}" "${ALIAS}" "${PROTOCOL}" "${USERNAME}" "${PASSWORD}" "${DOMAIN}" "${ADDRESS}" "${MAC}" "${AUTOPASS}" "${LOCALNET}" "${NOCACHE}" "${SCREENSIZE}"

    status=$?

    if [ $status -eq 0 ]
    then
      echo -e "${GREEN}OK${WHITE}"
    else
      echo -e "${RED}NOK [Status: $status]${WHITE}"
    fi
  ) &

  sleep 1
done

# Remove old error files
find "${CONF_DIR}" -name "${ERROR_FILE_PREFIX}*.log" -mtime +30 -exec rm -f {} \;
ln -f "${ERROR_FILE}" "${CONF_DIR}/${ERROR_FILE_PREFIX}"

wait

exit 0
#### BASE64 #### rdp.png ####
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
